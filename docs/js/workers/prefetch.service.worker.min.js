/**
 * @license b-here v1.0.0
 * (c) 2022 Luca Zampetti <lzampetti@gmail.com>
 * License: MIT
 */
!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(t,n){var r;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(r=function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(t))||n&&t&&"number"==typeof t.length){r&&(t=r);var o=0;return function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(r=t[Symbol.iterator]()).next.bind(r)}var n="progress",r="complete",o={},i={};function a(e,t,n){self.postMessage({type:e,assets:t,data:n})}self.addEventListener("message",(function(e){var f=e.data.id,u=e.data.assets;if(f)if(!f||u){if(u.length&&"undefined"!=typeof Promise&&"function"==typeof fetch){var l={mode:"cors"};if(self.AbortController){var c=new AbortController;l.signal=c.signal,i[f]=c}return function(e,n){var r=e.length,o=0;"function"==typeof n&&n({loaded:o,total:r});for(var i,a=t(e);!(i=a()).done;){i.value.then((function(){o++,"function"==typeof n&&n({loaded:o,total:r})}))}return Promise.all(e)}(u.map((function(e){return function(e,t){return new Promise((function(n,r){o[e]?n(e):fetch(e,t).then((function(t){o[e]=!0,n(e)}),(function(e){r(e)}))}))}(e,l)})),(function(e){a(n,u,e)})).then((function(e){delete i[f],a(r,u)})).catch((function(e){console.log("PrefetchServiceWorker.onMessage.error",e)}))}}else{var s=i[f];s&&s.abort()}}))}));
//# sourceMappingURL=prefetch.service.worker.min.js.map